// Download utility functions
export const generateDummyPDF = (title: string, pages: number = 1): Blob => {
  // Create a simple PDF-like content
  const pdfContent = `%PDF-1.4
1 0 obj
<<
/Type /Catalog
/Pages 2 0 R
>>
endobj

2 0 obj
<<
/Type /Pages
/Kids [3 0 R]
/Count 1
>>
endobj

3 0 obj
<<
/Type /Page
/Parent 2 0 R
/MediaBox [0 0 612 792]
/Contents 4 0 R
/Resources <<
/Font <<
/F1 5 0 R
>>
>>
>>
endobj

4 0 obj
<<
/Length 100
>>
stream
BT
/F1 12 Tf
50 700 Td
(${title}) Tj
0 -50 Td
(This is a sample PDF document) Tj
0 -20 Td
(Generated by DSecure Resources) Tj
0 -20 Td
(Pages: ${pages}) Tj
ET
endstream
endobj

5 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Helvetica
>>
endobj

xref
0 6
0000000000 65535 f 
0000000009 00000 n 
0000000058 00000 n 
0000000115 00000 n 
0000000274 00000 n 
0000000424 00000 n 
trailer
<<
/Size 6
/Root 1 0 R
>>
startxref
521
%%EOF`;

  return new Blob([pdfContent], { type: 'application/pdf' });
};

export const downloadResource = (resource: {
  title: string;
  downloadSize: string;
  pages: number;
  type: string;
}) => {
  try {
    // Generate dummy PDF
    const pdfBlob = generateDummyPDF(resource.title, resource.pages);
    
    // Create download URL
    const url = URL.createObjectURL(pdfBlob);
    
    // Create temporary link and trigger download
    const link = document.createElement('a');
    link.href = url;
    link.download = `${resource.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_dsecure.pdf`;
    document.body.appendChild(link);
    link.click();
    
    // Cleanup
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
    
    // Show success message (optional)
    console.log(`Downloaded: ${resource.title}`);
    
    return true;
  } catch (error) {
    console.error('Download failed:', error);
    return false;
  }
};

export const downloadResourceWithNotification = (resource: {
  title: string;
  downloadSize: string;
  pages: number;
  type: string;
}) => {
  // Keep for backward compatibility: return boolean and let caller handle notifications
  return downloadResource(resource);
};